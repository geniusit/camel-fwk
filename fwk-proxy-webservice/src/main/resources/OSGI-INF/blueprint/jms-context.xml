<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
		   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
		   xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">

    <!-- ###############################################- JMS CONFIGURATION ############################################### -->

	<!-- JNDI lookup to obtain the broker connection factory that have been already created in Karaf using the jms:create command.
		The init-method call afterPropertiesSet	is mandatory to prevent NullPointerException.
		Indeed the actual lookup is done in the afterPropertiesSet method which Spring calls after the bean has been created.
		Before that call the object wont have been retrieved from JNDI.
	-->
	<!--  <jee:jndi-lookup id="jndiObjectFactoryBean" jndi-name="${broker.jndi.name}"/>-->
    <bean id="jndiObjectFactoryBean" class="org.springframework.jndi.JndiObjectFactoryBean"  init-method="afterPropertiesSet">
        <property name="jndiName" value="${broker.jndi.name}" />
    </bean>

	<!-- Get the object from the org.springframework.jndi.JndiObjectFactoryBean -->
	<bean id="jmsConnectionFactory" factory-ref="jndiObjectFactoryBean" factory-method="getObject" />
    
    <bean id="txManager" class="org.springframework.jms.connection.JmsTransactionManager">
        <property name="connectionFactory" ref="jmsConnectionFactory" />
    </bean>
    
    <bean id="camelTransaction" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
        <property name="transactionManager" ref="txManager"/>
    </bean>

	<!-- Define the JMS Configuration -->
	<bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
        <property name="connectionFactory" ref="jmsConnectionFactory" />
        <property name="transacted" value="true" />
        <property name="transactionManager" ref="txManager" />
		<!--  <property name="cacheLevelName" value="CACHE_NONE" />-->
        <property name="cacheLevelName" value="CACHE_CONSUMER"/>
	</bean>

	<!-- Define the JMS Component -->
	<bean id="amq" class="org.apache.camel.component.jms.JmsComponent">
		<property name="configuration" ref="jmsConfig" />
	</bean>
    
	<!-- Expose the broker as a OSGI service -->
	<service id="broker" ref="amq" interface="org.apache.camel.Component">
		<service-properties>
      		<entry key="provider" value="amq" />
    	</service-properties>
	</service>

</blueprint>